#include <iostream>
#include <string>

class Aircraft {
public: 
       int age;
       std::string name;
       Aircraft(std::string Name, int Age) { name = Name; age = Age;}
         
         std::string getName() {return name;}
         void setName(std::string Name)
          {
            if (Name == "Airbus") {name = Name;}
               else  {name = Name;}
          }
          
         int getAge() {return age;}
         void setAge(int Age)
           {
             if (Age<10) {age = Age;}
                  else if (Age>10 && Age<20) { age = Age;}
                       else { age = Age; }
           }   
/*          
protected:
  std::string name;
  int age;

private:
  int private_age;
*/    
};

class Gliders : public Aircraft {
  public:    
    Derived d() {std::cout << "Gliders are not aircraft";}
    ~Derived d() {std::cout << "Gliders can derive from aircraft but are not aircraft, due to the lack of a propulsion system";}
    
};    



       
int main()
{ 
  Aircraft object ("Boeing", 30);
     if (object.getAge() <= 10)  {   std::cout <<" The aircraft " << object.getName() << " is young, it has " << object.getAge() << " years." << std:: endl;}
                else if (object.getAge() >= 10 && object.getAge() <= 20)  {   std::cout <<" The aircraft is not that old, " << object.getAge() << " years." << std:: endl;}
                      else {std::cout <<" The aircraft " << object.getName() <<  " is old, it has "<< object.getAge() << " years." << std:: endl;} 

  Gliders::Aircraft("Airbus",20);
 // std::cout << object.getName() << Gliders.getAge();
}
